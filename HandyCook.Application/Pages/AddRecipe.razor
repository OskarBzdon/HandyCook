@using HandyCook.Application.Data
@using HandyCook.Application.Services;
@using Microsoft.AspNetCore.Identity;
@using System.Security.Claims;
@using MudBlazor

@inject ApplicationDbContext ctx
@inject AuthenticationStateProvider GetAuthenticationStateAsync
@inject ISnackbar Snackbar
@inject NavigationManager NavigationManager
@inject IUserService UserService

@page "/recipe/add"

<MudContainer>
    <MudCard>
        <MudCardContent>
            <MudText Typo="Typo.h4">Add Recipe</MudText>

            <MudTextField Label="Title" @bind-Value="model.Name" />

            @if (model.Images.Count > 0)
            {
                <MudImage ObjectFit="ObjectFit.Cover" Height="160" Width="350" Src="@GetImageSrc(model.Images.FirstOrDefault())" Alt="Recipe Image" Elevation="25" Class="rounded-lg" />
            }
            <MudFileUpload T="IBrowserFile" Accept=".jpg, .png" FilesChanged="UploadFile">
                <ButtonTemplate>
                    <MudButton HtmlTag="label"
                               Variant="Variant.Filled"
                               Color="Color.Primary"
                               StartIcon="@Icons.Material.Filled.Image"
                               for="@context">
                        Upload Image
                    </MudButton>
                </ButtonTemplate>
            </MudFileUpload>

            <MudTextField Label="Description" @bind-Value="model.Description" />

            <MudText Typo="Typo.h6">Ingredients</MudText>
            @foreach (var ingredient in model.Ingredients)
            {
                <MudChipSet>
                    <MudChip>@ingredient.Name</MudChip>
                    <MudChip>@ingredient.Amount</MudChip>
                    <MudIconButton Icon="@Icons.Material.Filled.Close" Color="Color.Primary" OnClick="@(() => RemoveIngredient(ingredient))" />
                </MudChipSet>
            }
            <MudTextField @bind-Value="newIngredientName" Label="Ingredient name" />
            <MudTextField @bind-Value="newIngredientAmount" Label="Amount" />
            <MudIconButton Icon="@Icons.Material.Filled.Add" Color="Color.Primary" OnClick="AddIngredient" />


            <MudText Typo="Typo.h6">Steps</MudText>
            @foreach (var step in model.Steps)
            {
                <MudTextField @bind-Value="step.Description" Label="Step description" FullWidth />
                <MudTextField @bind-Value="step.Temperature" Label="Temperature (optional)" />
                <MudTextField @bind-Value="step.Timer" Label="Timer (optional, in minutes)" />
                <MudIconButton Icon="@Icons.Material.Filled.Close" Color="Color.Primary" OnClick="@(() => RemoveStep(step))" />
            }
            <MudFileUpload T="IBrowserFile" Accept=".jpg, .png" FilesChanged="UploadStepFile">
                <ButtonTemplate>
                    <MudButton HtmlTag="label"
                               Variant="Variant.Filled"
                               Color="Color.Primary"
                               StartIcon="@Icons.Material.Filled.Image"
                               for="@context">
                        Upload step image (optional)
                    </MudButton>
                </ButtonTemplate>
            </MudFileUpload>
            <MudTextField @bind-Value="newStepDescription" Label="Add a step description" FullWidth />
            <MudNumericField @bind-Value="newStepTemperature" Label="Temperature (optional)" />
            <MudTextField @bind-Value="newStepTimer" Label="Timer (optional, in minutes)" />
            <MudIconButton Icon="@Icons.Material.Filled.Add" Color="Color.Primary" OnClick="AddStep" />


            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="SaveRecipe">Add recipe</MudButton>
            
            @if (isError)
            {
                <MudText Typo="Typo.h6" Color="Color.Error">@message</MudText>
            }
            else
            {
                <MudText Typo="Typo.h6" Color="Color.Primary">@message</MudText>
            }
        </MudCardContent>
    </MudCard>
</MudContainer>
