@page "/"
@using HandyCook.Application.Data;
@using HandyCook.Application.Services;
@using MudBlazor
@using global::AutoMapper
@using HandyCook.Application.Components

@inject ApplicationDbContext ctx
@inject IUserService UserService
@inject ISnackbar Snackbar
@inject IMapper Mapper
@inject NavigationManager NavigationManager

<PageTitle>Recipe Gallery</PageTitle>

<MudGrid Justify="Justify.FlexStart">
    @if (Recipes is null)
    {
        @for (int i = 0; i < 6; i++) // Adjust the number of skeletons as needed
        {
            <MudItem xs="6" sm="4" md="3" lg="2">
                <MudCard>
                    <MudSkeleton SkeletonType="SkeletonType.Rectangle" Animation="Animation.Wave" Height="150px" Width="167px" />
                    <MudCardContent>
                        <div class="recipe-content">
                            <MudSkeleton Animation="Animation.Wave" Width="@($"{Random.Next(60, 90).ToString()}%")" />
                            <MudSkeleton Animation="Animation.Wave" Width="@($"{Random.Next(30, 90).ToString()}%")" />
                        </div>
                    </MudCardContent>
                </MudCard>
            </MudItem>
        }
    }
    else
    {
        foreach (var recipe in Recipes)
        {
            <MudItem xs="6" sm="4" md="3" lg="2" @onclick="(async) => NavigateToRecipe(recipe.Id).ConfigureAwait(false)">
                <MudCard>
                    <MudCardMedia Image="@GetImageSrc(recipe.Images.FirstOrDefault())" Height="150" />
                    <MudCardContent>
                        <div class="recipe-content">
                            <RecipeRating Recipe="recipe" UserId="UserId"/>
                        </div>
                    </MudCardContent>
                </MudCard>
            </MudItem>
        }
    }
</MudGrid>
